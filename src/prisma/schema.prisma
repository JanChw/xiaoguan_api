generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id          Int      @id @unique @default(autoincrement())
  name        String
  password    String
  phone String  @unique
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  addresses   address[]
  cart cart?
  orders order[]

  @@map("users")
}

model address {
  id Int @id @unique @default(autoincrement())
  address String 
  isDefault Boolean @default(false)
  userId Int?
  user   user?   @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@index([address])
  @@map("addresses")
}

model order {
  id Int @id @unique @default(autoincrement())
  code String @unique
  status PaymentStatus @default(UNPAID)
  products cartItem[]
  totalQty Int @map("total_qty")
  totalPrice Decimal @map("total_price")
  userId Int
  User user @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  
}

model cart {
  id Int @id @unique @default(autoincrement())
  userId Int @unique
  user user @relation(fields: [userId], references: [id])
  cartItems cartItem[]
  totalQty Int  @map("total_qty") @default(0)
  totalPrice Decimal @map("total_price") @default(0.0)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  
}

model cartItem {
  id Int @id @unique @default(autoincrement())
  price Decimal
  qty Int
  totalPrice Decimal
  specId Int
  spec spec @relation(fields: [specId], references: [id])
  cartId Int
  cart cart @relation(fields: [cartId], references: [id])
  orderId Int?
  order order? @relation(fields: [orderId], references: [id])
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  
}


model food {
  id          Int       @id @unique @default(autoincrement())
  imgUrl      String
  desc        String    @default("")
  detail      String    @default("")
  saleType    SaleType? @default(OFFLINE)
  isPublished Boolean?  @default(false)
  isDeleted Boolean? @default(false)
  name        String    @unique
  discount    Decimal? @default(1.00) @db.Decimal(3, 2)
  originPrice Decimal? @db.Decimal(4, 2)
  images  file[]
  specs       spec[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("foods")
}

model spec {
  id          Int    @id @unique @default(autoincrement())
  name        String
  price       Decimal
  discount    Decimal? @default(1.0)
  foodId      Int?
  food        food?   @relation(fields: [foodId], references: [id])
  cartItems   cartItem[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("specs")
}

model bucket {
  id        Int      @id @unique @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  files     file[]

  @@map("buckets")
}

model file {
  id         Int      @id @unique @default(autoincrement())
  filename   String   @unique
  originName String
  isCollected Boolean @default(false)
  url        String
  fileType   Media    @map("file_type")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
  bucketId   Int
  bucket     bucket   @relation(fields: [bucketId], references: [id])
  banners    bannersOnfiles[]
  foodId     Int?
  food       food? @relation(fields: [foodId], references: [id])
  

  @@map("files")
}
// banner file => 多对多
model banner {
  id Int @id @unique @default(autoincrement())
  name String @unique
  links Json
  title String?   @default("")
  desc String? @default("")
  imgs bannersOnfiles[]
}

model bannersOnfiles {
  fileId   Int
  file     file @relation(fields: [fileId], references: [id])
  bannerId   Int
  banner     banner @relation(fields: [bannerId], references: [id])

  @@id([fileId, bannerId])
}

model service {
  id        Int      @id @unique @default(autoincrement())
  name      String
  image     String   @default("")
  price     Decimal    @default(0.0)
  desc      String   @default("")
  remark    String   @default("")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("services")
}

enum SaleType {
  OFFLINE
  ONLINE
  BOTH
}

enum Media {
  IMAGE
  VEDIO
  AUDIO
  TEXT
}

enum PaymentStatus {
  UNPAID
  PAYING
  PAID
}